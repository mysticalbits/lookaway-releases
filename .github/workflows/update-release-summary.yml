name: Update Release Summary

on:
  release:
    types: [published]
  workflow_dispatch:  # This allows manual triggering

jobs:
  update-release-summary:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyGithub

    - name: Update Release Summary
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python - <<EOF
        import os
        import json
        from github import Github
        from datetime import datetime

        g = Github(os.environ['GITHUB_TOKEN'])
        repo = g.get_repo(os.environ['GITHUB_REPOSITORY'])

        releases = []
        for release in repo.get_releases():
            releases.append({
                'id': release.id,
                'tag_name': release.tag_name,
                'published_at': release.published_at.isoformat()
            })

        with open('release_summary.json', 'w') as f:
            json.dump(releases, f, indent=2)

        try:
            contents = repo.get_contents("release_summary.json")
            repo.update_file(
                contents.path,
                "Update release summary",
                json.dumps(releases, indent=2),
                contents.sha,
                branch="main"
            )
        except:
            repo.create_file(
                "release_summary.json",
                "Create release summary",
                json.dumps(releases, indent=2),
                branch="main"
            )
        EOF

    - name: Commit and push if changed
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Actions"
        git add release_summary.json
        git commit -m "Update release summary" || exit 0
        git push
